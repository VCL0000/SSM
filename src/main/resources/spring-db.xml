<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

    <!--引入配置属性文件 -->
    <context:property-placeholder location="classpath*:jdbc.properties"/>

    <!--&lt;!&ndash; 配置数据源 使用的是Druid数据源 &ndash;&gt;
    <bean name="dataSource" class="${dataSource.class}"
          init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        &lt;!&ndash; 初始化连接大小 &ndash;&gt;
        <property name="initialSize" value="0"/>
        &lt;!&ndash; 连接池最大使用连接数量 &ndash;&gt;
        <property name="maxActive" value="20"/>

        &lt;!&ndash; 连接池最小空闲 &ndash;&gt;
        <property name="minIdle" value="0"/>
        &lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;
        <property name="maxWait" value="60000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="33"/>
        &lt;!&ndash; 用来检测有效sql &ndash;&gt;
        <property name="validationQuery" value="${validationQuery}"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
        <property name="minEvictableIdleTimeMillis" value="25200000"/>
        &lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;
        <property name="removeAbandoned" value="true"/>
        &lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;
        <property name="removeAbandonedTimeout" value="1800"/>
        &lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;
        <property name="logAbandoned" value="true"/>
        &lt;!&ndash; 监控数据库 &ndash;&gt;
        <property name="filters" value="mergeStat"/>
    </bean>
-->
    <!--JNDI-->
    <jee:jndi-lookup id="dataSource" jndi-name="dataSource" />

    <!--声明式事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--(事务管理)transaction manager, use JtaTransactionManager for global tx-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.vcl0000.data.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!-- spring和MyBatis完美整合，不需要MyBatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        <!--Mybatis常量-->
        <property name="typeAliasesPackage" value="com.vcl0000.data.model"/>
        <!--加載 log 配置-->
        <property name="configLocation"  value="classpath:config/mybatis-log-config.xml"/>
    </bean>


    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
</beans>